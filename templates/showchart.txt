  // Load the Visualization API and the corechart package.
  google.charts.load('current', {'packages':['corechart']});
  google.charts.load('current', { 'packages': ['table'] });

  // Set a callback to run when the Google Visualization API is loaded.
  google.charts.setOnLoadCallback(drawChart);

  // Callback that creates and populates a data table,
  // instantiates the pie chart, passes in the data and
  // draws it.
  function drawChart() {

    // Create the data table.
    var data = new google.visualization.DataTable();
    data.addColumn('number', 'Top');
    data.addColumn('string', 'Author');
    data.addColumn('string', 'Name');
    data.addColumn('number', 'Commits');
    data.addRows([
	{% for row in rows -%}
		[{{ row.top }}, '{{row.author}}', '{{ row.name }}', {{ row.commits }}],
     	{% endfor %}
    ]);

    // Create the data table.
    var data2 = new google.visualization.arrayToDataTable([
  {% for row in rows -%}
		['{{row.author}}/{{ row.name }}', {{ row.commits }}],
     	{% endfor %}
    ]);

    // Set chart options
    var options = {'width':'100%','height':'100%'};

    var options2 = {
        title: 'Top trending GitHub repos',
        hAxis: {
          title: 'Repository name',
        },
        vAxis: {
          title: 'Number of commits'
        },
        'width':'100%','height':'100%'
      };

    // Instantiate and draw our chart, passing in some options.
    var chart2 = new google.visualization.ColumnChart(document.getElementById('chart_div2'));
    chart2.draw(data2, options2);

    // Instantiate and draw our chart, passing in some options.
    var chart = new google.visualization.Table(document.getElementById('chart_div'));
    chart.draw(data, options);
  }